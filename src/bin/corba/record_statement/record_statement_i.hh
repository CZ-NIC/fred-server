/*
 * Copyright (C) 2017  CZ.NIC, z.s.p.o.
 *
 * This file is part of FRED.
 *
 * FRED is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, version 2 of the License.
 *
 * FRED is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with FRED.  If not, see <http://www.gnu.org/licenses/>.
 */

/**
 *  @file
 *  registry record statement corba impl header
 */

//pregenerated by $> omniidl -bcxx -Wba -Wbexample -C./src/bin/corba ~/workspace_18680/enum/idl/idl/RecordStatement.idl

#ifndef RECORD_STATEMENT_I_HH_993EA437283F486CB9C5943AE62F0770
#define RECORD_STATEMENT_I_HH_993EA437283F486CB9C5943AE62F0770

#include "src/bin/corba/Buffer.hh"
#include "src/bin/corba/IsoDateTime.hh"
#include "src/bin/corba/RecordStatement.hh"

#include "src/libfred/documents.hh"
#include "src/libfred/mailer.hh"

#include <boost/shared_ptr.hpp>

#include <string>

namespace Fred {
namespace Backend {
namespace RecordStatement {

class RecordStatementImpl; //pimpl class

} // namespace Fred::Backend::RecordStatement
} // namespace Fred::Backend
} // namespace Fred

namespace Registry {
namespace RecordStatement {

///record statement corba interface
class Server_i:public POA_Registry::RecordStatement::Server
{
public:
    Server_i(
        const std::string &_server_name,
        const boost::shared_ptr<LibFred::Document::Manager>& _doc_manager,
        const boost::shared_ptr<LibFred::Mailer::Manager>& _mailer_manager,
        const std::string& _registry_timezone);
    virtual ~Server_i();

    // methods corresponding to defined IDL attributes and operations

    Buffer* domain_printout(const char* _fqdn, ::CORBA::Boolean _is_private_printout);

    Buffer* nsset_printout(const char* _handle);

    Buffer* keyset_printout(const char* _handle);

    Buffer* contact_printout(const char* _handle, ::CORBA::Boolean _is_private_printout);

    Buffer* historic_domain_printout(const char* _fqdn, const IsoDateTime& _time);

    Buffer* historic_nsset_printout(const char* _handle, const IsoDateTime& _time);

    Buffer* historic_keyset_printout(const char* _handle, const IsoDateTime& _time);

    Buffer* historic_contact_printout(const char* _handle, const IsoDateTime& _time);

    void send_domain_printout(const char* _fqdn);

    void send_nsset_printout(const char* _handle);

    void send_keyset_printout(const char* _handle);

    void send_contact_printout(const char* _handle);
private:
    // do not copy
    Fred::Backend::RecordStatement::RecordStatementImpl* const impl_;
    Server_i(const Server_i&);//no body
    Server_i& operator=(const Server_i&);//no body
};

} // namespace Registry::RecordStatement
} // namespace Registry

#endif
