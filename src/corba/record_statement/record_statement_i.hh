/*
 * Copyright (C) 2017  CZ.NIC, z.s.p.o.
 *
 * This file is part of FRED.
 *
 * FRED is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, version 2 of the License.
 *
 * FRED is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with FRED.  If not, see <http://www.gnu.org/licenses/>.
 */

/**
 *  @file
 *  registry record statement corba impl header
 */

//pregenerated by $> omniidl -bcxx -Wba -Wbexample -C./src/corba ~/workspace_18680/enum/idl/idl/RecordStatement.idl

#ifndef RECORD_STATEMENT_I_H_94BC97049C254578AA0A7D147E5B7039
#define RECORD_STATEMENT_I_H_94BC97049C254578AA0A7D147E5B7039

#include "src/corba/RecordStatement.hh"

#include <string>
#include <boost/shared_ptr.hpp>
#include "src/fredlib/documents.h"
#include "src/fredlib/mailer.h"

namespace Registry
{
namespace RecordStatement
{
    class RecordStatementImpl;//pimpl class

    ///record statement corba interface
    class Server_i: public POA_Registry::RecordStatement::Server
    {
    public:
        Server_i(
            const std::string &_server_name,
            boost::shared_ptr<Fred::Document::Manager>  doc_manager,
            boost::shared_ptr<Fred::Mailer::Manager> mailer_manager,
            const std::string& registry_timezone);
        virtual ~Server_i();

        // methods corresponding to defined IDL attributes and operations

        Registry::RecordStatement::PdfBuffer* domain_printout(const char* fqdn, ::CORBA::Boolean is_private_printout);

        Registry::RecordStatement::PdfBuffer* nsset_printout(const char* handle);

        Registry::RecordStatement::PdfBuffer* keyset_printout(const char* handle);

        Registry::RecordStatement::PdfBuffer* contact_printout(const char* handle, ::CORBA::Boolean is_private_printout);

        Registry::RecordStatement::PdfBuffer* historic_domain_printout(
                const char* fqdn, const Registry::RecordStatement::DateTime& time);

        Registry::RecordStatement::PdfBuffer* historic_nsset_printout(
                const char* handle, const Registry::RecordStatement::DateTime& time);

        Registry::RecordStatement::PdfBuffer* historic_keyset_printout(
                const char* handle, const Registry::RecordStatement::DateTime& time);

        Registry::RecordStatement::PdfBuffer* historic_contact_printout(
                const char* handle, const Registry::RecordStatement::DateTime& time);

        void send_domain_printout(const char* fqdn);

        void send_nsset_printout(const char* handle);

        void send_keyset_printout(const char* handle);

        void send_contact_printout(const char* handle);
    private:
        // do not copy
        RecordStatementImpl * const pimpl_;
        Server_i(const Server_i&);//no body
        Server_i& operator= (const Server_i&);//no body
    };//class Server_i
}//namespace RecordStatement
}//namespace Registry

#endif
