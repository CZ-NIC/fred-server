stages:
  - image
  - analysis
  - build


.image: &image
  stage: image
  before_script:
    - docker info
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker pull "$IMAGE_TAG" || true
    - docker build --cache-from "$IMAGE_TAG" -t "$IMAGE_TAG" "$IMAGE_PATH" || docker build --no-cache -t "$IMAGE_TAG" "$IMAGE_PATH"
    - docker push "$IMAGE_TAG"
  tags:
    - dind


.build: &build_job
  variables:
    SRC_DIR: /usr/local/env
  stage: build
  before_script:
    - install -m 700 -d $HOME/.ssh
    - install -m 600 $SRC_DIR/{id_rsa,id_rsa.pub,known_hosts} $HOME/.ssh/
    - ./scripts/dependencies.sh -r
  script:
    - cmake .
    - job_count=$(($(grep -c processor /proc/cpuinfo) / 2 + 1))
    - grep "^distcheck:" Makefile && make -j "$job_count" distcheck || make -j "$job_count"



docker:server:centos_7:
  <<: *image
  variables:
    IMAGE_NAME: centos:7
    IMAGE_TAG: $CI_REGISTRY_IMAGE/$IMAGE_NAME
    IMAGE_PATH: scripts/docker/$IMAGE_NAME
  only:
    - master
    - tags
    - triggers
    - schedules
    - web

.centos_7: &centos_7
  image: "$CI_REGISTRY_IMAGE/centos:7"
  tags:
    - amd64
    - common
    - linux

build:centos_7:amd64:
  <<: *centos_7
  <<: *build_job
  only:
    - master
    - tags
    - triggers
    - schedules
    - web


docker:server:fedora_32:
  <<: *image
  variables:
    IMAGE_NAME: fedora:32
    IMAGE_TAG: $CI_REGISTRY_IMAGE/$IMAGE_NAME
    IMAGE_PATH: scripts/docker/$IMAGE_NAME
  only:
    - master
    - tags
    - triggers
    - schedules
    - web

.fedora_32: &fedora_32
  image: "$CI_REGISTRY_IMAGE/fedora:32"
  tags:
    - amd64
    - common
    - linux

build:fedora_32:amd64:
  <<: *fedora_32
  <<: *build_job
  only:
    - master
    - tags
    - triggers
    - schedules
    - web


docker:server:fedora_33:
  <<: *image
  variables:
    IMAGE_NAME: fedora:33
    IMAGE_TAG: $CI_REGISTRY_IMAGE/$IMAGE_NAME
    IMAGE_PATH: scripts/docker/$IMAGE_NAME
  only:
    - master
    - tags
    - triggers
    - schedules
    - web

.fedora_33: &fedora_33
  image: "$CI_REGISTRY_IMAGE/fedora:33"
  tags:
    - amd64
    - common
    - linux

build:fedora_33:amd64:
  <<: *fedora_33
  <<: *build_job
  only:
    - master
    - tags
    - triggers
    - schedules
    - web


docker:server:ubuntu_16_04:
  <<: *image
  variables:
    IMAGE_NAME: ubuntu:16.04
    IMAGE_TAG: $CI_REGISTRY_IMAGE/$IMAGE_NAME
    IMAGE_PATH: scripts/docker/$IMAGE_NAME

.ubuntu_16_04: &ubuntu_16_04
  image: "$CI_REGISTRY_IMAGE/ubuntu:16.04"
  tags:
    - amd64
    - common
    - linux

build:ubuntu_16_04:amd64:
  <<: *ubuntu_16_04
  <<: *build_job


docker:server:ubuntu_20_04:
  <<: *image
  variables:
    IMAGE_NAME: ubuntu:20.04
    IMAGE_TAG: $CI_REGISTRY_IMAGE/$IMAGE_NAME
    IMAGE_PATH: scripts/docker/$IMAGE_NAME
  only:
    - master
    - tags
    - triggers
    - schedules
    - web

.ubuntu_20_04: &ubuntu_20_04
  image: "$CI_REGISTRY_IMAGE/ubuntu:20.04"
  tags:
    - amd64
    - common
    - linux

build:ubuntu_20_04:amd64:
  <<: *ubuntu_20_04
  <<: *build_job
  only:
    - master
    - tags
    - triggers
    - schedules
    - web



docker:man:
  <<: *image
  variables:
    IMAGE_NAME: man
    IMAGE_TAG: $CI_REGISTRY_IMAGE/$IMAGE_NAME
    IMAGE_PATH: scripts/docker/$IMAGE_NAME

build:man:
  image: "$CI_REGISTRY_IMAGE/man"
  stage: build
  script:
      - cd man/ && make man SPHINXOPTS=-W
  tags:
    - amd64
    - common
    - linux


license_check:
  <<: *ubuntu_16_04
  variables:
    SRC_DIR: /usr/local/env
  stage: analysis
  before_script:
    - install -m 700 -d $HOME/.ssh
    - install -m 600 $SRC_DIR/{id_rsa,id_rsa.pub,known_hosts} $HOME/.ssh/
    - git clone git@gitlab.office.nic.cz:internal-tools/license-check.git --single-branch --depth 1
  script:
    - ./license-check/license-check.sh -v